/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 laying-monkey-1.gltf 
*/
import { GroupProps } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { Mesh } from "three";
import { MeshStandardMaterial } from "three";
import { useLoader } from "@react-three/fiber";
import { TextureLoader } from "three";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";
import { useState } from "react";
import { Vector3 } from "three";

const monkeyMaterial = new MeshStandardMaterial({
  color: "#FFD700",
  metalness: 0.5,
  roughness: 0.2,
});

export function Model(props: GroupProps) {
  const texture = useLoader(TextureLoader, "/texture-marmo.jpg");
  const ConoMesh = useRef<THREE.Mesh>(null);
  const [isConoHovered, setIsConoHovered] = useState(false);
  const [isTorusHovered, setIsTorusHovered] = useState(false);
  const [targetYPosition, setTargetYPosition] = useState(2.831);
  const [torusScale, setTorusScale] = useState(1.5);
  const [conoScale, setConoScale] = useState(2.676);
  const MonkeyMesh = useRef<THREE.Mesh>(null);

  const TorusMesh = useRef<THREE.Mesh>(null);

  const pianoMaterial = new MeshStandardMaterial({
    map: texture,
    color: "#fff",
    metalness: 1.4,
  });

  useFrame(() => {
    if (ConoMesh.current) {
      ConoMesh.current.rotation.y += isConoHovered ? 0.009 : 0.006;
      ConoMesh.current.position.lerp(
        new Vector3(0, targetYPosition, 1.366),
        0.05
      );
      ConoMesh.current.scale.lerp(
        new Vector3(conoScale, conoScale, conoScale),
        0.05
      );
    }
    if (TorusMesh.current) {
      TorusMesh.current.rotation.y += isTorusHovered ? 0.009 : 0.006;
      TorusMesh.current.scale.lerp(
        new Vector3(torusScale, torusScale, torusScale),
        0.05
      );
    }
    if (MonkeyMesh.current) {
      MonkeyMesh.current.rotation.y += 0.005;
    }
  });

  const { nodes, materials } = useGLTF("/laying-monkey-1.gltf");
  return (
    <group {...props} dispose={null}>
      <pointLight
        intensity={543.514}
        decay={2}
        position={[-6.273, 10.933, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
      />

      <group rotation={[0, Math.PI / 2, 0]}>
        <mesh
          geometry={(nodes.Piano as Mesh).geometry}
          material={pianoMaterial}
          position={[-0.802, 0.528, 0.879]}
          scale={6.384}
        />
        <mesh
          geometry={(nodes.Piano001 as Mesh).geometry}
          material={pianoMaterial}
          position={[3.774, 2.696, 0.689]}
          rotation={[-3.121, 0.008, 1.545]}
          scale={6.582}
        />
        <mesh
          ref={MonkeyMesh}
          geometry={(nodes.Scimmia as Mesh).geometry}
          material={monkeyMaterial}
          position={[0.308, 2.5, -4.677]}
          rotation={[0, -1.292, 0.908]}
          scale={2.413}
          onPointerOver={() => (document.body.style.cursor = "pointer")} // Cambia il cursore a pointer quando il mouse passa sopra
          onPointerOut={() => (document.body.style.cursor = "auto")} // Ripristina il cursore quando il mouse esce
        />
        <mesh
          ref={ConoMesh}
          geometry={(nodes.Cono as Mesh).geometry}
          material={materials["Materiale.003"]}
          position={[0, 2.831, 1.366]}
          scale={2.676}
          onPointerOver={() => {
            setIsConoHovered(true);
            setTargetYPosition(4);
            setConoScale(3.5);
            document.body.style.cursor = "pointer"; // Aumenta la scala quando il mouse passa sopra
          }}
          onPointerOut={() => {
            setIsConoHovered(false);
            setTargetYPosition(2.831);
            setConoScale(2.676);
            document.body.style.cursor = "auto";
            // Ripristina la scala originale quando il mouse esce
          }}
        />
        <mesh
          ref={TorusMesh}
          geometry={(nodes.Torus as Mesh).geometry}
          material={materials["Materiale.004"]}
          position={[0, 2.863, 7.907]}
          rotation={[0, 0, -1.71]}
          scale={-1.437}
          onPointerOver={() => {
            setIsTorusHovered(true);
            setTorusScale(1.9);
            document.body.style.cursor = "pointer"; // Aumenta la scala quando il mouse passa sopra
          }}
          onPointerOut={() => {
            setIsTorusHovered(false);
            setTorusScale(1.5);
            document.body.style.cursor = "auto"; // Ripristina la scala originale quando il mouse esce
          }}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/laying-monkey-1.gltf");
